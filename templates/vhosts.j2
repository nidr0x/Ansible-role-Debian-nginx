# {{ ansible_managed }}

{% for vhost in nginx_vhosts %}
server {
    listen {{ vhost.listen | default('80 default_server') }};
{% if vhost.redirect_http_to_https is defined %}
    server_name {{ nginx_vhost_domain }} www.{{ nginx_vhost_domain }};
    return 301 https://www.$server_name$request_uri;   
{% endif %}     
{% if vhost.listen2 is defined %}
    listen {{ vhost.listen2 }};
{% endif %}      
{% if vhost.server_name is defined %}
    server_name {{ vhost.server_name }};
{% endif %}
{% if vhost.ssl_certificate is defined %}
    ssl_certificate {{ vhost.ssl_certificate }};
{% endif %}
{% if vhost.ssl_certificate_key is defined %}
    ssl_certificate_key {{ vhost.ssl_certificate_key }};
{% endif %}
{% if vhost.root is defined %}
    root {{ vhost.root }};
{% endif %}
{% if vhost.index is defined %}
    index {{ vhost.index }};
{% endif %}    
{% if vhost.error_page is defined %}
    error_page {{ vhost.error_page }};
{% endif %}
{% if vhost.access_log is defined %}
    access_log {{ vhost.access_log }};
{% endif %}
{% if vhost.error_log is defined %}
    error_log {{ vhost.error_log }} error;
{% endif %}
{% if vhost.return is defined %}
    return {{ vhost.return }};
{% endif %}
{% if vhost.redirection_file is defined %}
    include {{ nginx_includes_path }}/{{ vhost.redirection_file }};
{% endif %}
{% if vhost.rocketwp is defined %}
    include {{ nginx_includes_path }}/rocket-wp.conf;
{% endif %}
{% if vhost.drop_attacks is defined %}
    include {{ nginx_includes_path }}/drop.conf;
    include {{ nginx_includes_path }}/block.conf;
{% endif %}    
{% if vhost.extra_parameters is defined %}
    {{ vhost.extra_parameters|indent(4) }}
{% endif %} 
{% if vhost.wp_settings is defined %}
    location / {
        try_files $uri $uri/ /index.php?$args;
        }

    rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    location ~ [^/]\.php(/|$) {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;        
    fastcgi_pass unix:/dev/shm/php-cgi.sock;
    fastcgi_index index.php;
    include fastcgi.conf;
    }      

location ~* \.(?:ico|css|js|gif|jpe?g|png|woff|ttf|otf|svg|woff2|eot)$ {
    expires 30d;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
}

{% endif %}        
{% if vhost.ssl_params is defined %}
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    ssl_prefer_server_ciphers   on;

    ssl_session_cache   shared:SSL:20m;
    ssl_session_timeout 60m;
{% endif %}
{% if vhost.proxy_pass_varnish is defined %}

    location / {
        proxy_buffer_size    64k;
        proxy_buffers     16 64k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;
        proxy_connect_timeout 30s;            
        proxy_pass http://127.0.0.1:6081;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header HTTPS "on";  
        }

{% endif %}
}
{% endfor %}
                      
